// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventBridgeWebSocket snapshot test EventsRuleToSns default params 1`] = `
{
  "Outputs": {
    "eventBridgeSocketDeployWebsocketendpoint7B865CDA": {
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Fn::GetAtt": [
                "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47",
                "ApiEndpoint",
              ],
            },
            "/dev",
          ],
        ],
      },
    },
  },
  "Resources": {
    "eventBridgeSocketDeployWebsocketRule71C1F191": {
      "Properties": {
        "EventBusName": "my-random-bus",
        "EventPattern": {
          "account": [
            "my-account",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "eventBridgeSocketDeployeventbridgebroker1D8651C6",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "eventBridgeSocketDeployWebsocketRuleAllowEventRuleeventBridgeSocketDeployeventbridgebroker9CB272C85390421F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "eventBridgeSocketDeployeventbridgebroker1D8651C6",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "eventBridgeSocketDeployWebsocketRule71C1F191",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47": {
      "Properties": {
        "Name": "EventBridgeSockets",
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.action",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "eventBridgeSocketDeployeventBridgeSocketDeployapiconnectRoute308BAAC5": {
      "Properties": {
        "ApiId": {
          "Ref": "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "$connect",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "eventBridgeSocketDeployeventBridgeSocketDeployapiconnectRouteConnectIntegration439F042A",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "eventBridgeSocketDeployeventBridgeSocketDeployapiconnectRouteConnectIntegration439F042A": {
      "Properties": {
        "ApiId": {
          "Ref": "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "eventBridgeSocketDeployonconnectAE0ACD17",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "eventBridgeSocketDeployeventBridgeSocketDeployapiconnectRouteConnectIntegrationPermissionD41BB7B4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "eventBridgeSocketDeployonconnectAE0ACD17",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47",
              },
              "/*/*$connect",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "eventBridgeSocketDeployeventBridgeSocketDeployapidisconnectRoute5AA2FBC6": {
      "Properties": {
        "ApiId": {
          "Ref": "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "$disconnect",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "eventBridgeSocketDeployeventBridgeSocketDeployapidisconnectRouteDisconnectIntegrationBA93024C",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "eventBridgeSocketDeployeventBridgeSocketDeployapidisconnectRouteDisconnectIntegrationBA93024C": {
      "Properties": {
        "ApiId": {
          "Ref": "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "eventBridgeSocketDeployondisconnect0F61A161",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "eventBridgeSocketDeployeventBridgeSocketDeployapidisconnectRouteDisconnectIntegrationPermissionE9EE2967": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "eventBridgeSocketDeployondisconnect0F61A161",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47",
              },
              "/*/*$disconnect",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "eventBridgeSocketDeployeventBridgeSocketDeployapistage6E463CF6": {
      "Properties": {
        "ApiId": {
          "Ref": "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47",
        },
        "AutoDeploy": true,
        "StageName": "dev",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "eventBridgeSocketDeployeventBridgeSocketDeployconnectionstable5C7E957A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "connectionId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "connectionId",
            "KeyType": "HASH",
          },
        ],
        "TableName": "eventBridgeSocketDeploy-connections-table",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "eventBridgeSocketDeployeventbridgebroker1D8651C6": {
      "DependsOn": [
        "eventBridgeSocketDeployeventbridgebrokerServiceRoleDefaultPolicy5D548830",
        "eventBridgeSocketDeployeventbridgebrokerServiceRoleE80F517C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a549b85065ed6603d1aac6495ead30df29d29dab7ce01adb9c4f9d7c376fe472.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": "eventBridgeSocketDeploy-connections-table",
            "WEBSOCKET_API": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::GetAtt": [
                      "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47",
                      "ApiEndpoint",
                    ],
                  },
                  "/dev",
                ],
              ],
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "eventBridgeSocketDeployeventbridgebrokerServiceRoleE80F517C",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "eventBridgeSocketDeployeventbridgebrokerServiceRoleDefaultPolicy5D548830": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    {
                      "Ref": "eventBridgeSocketDeployeventBridgeSocketDeployapiA13E2D47",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "eventBridgeSocketDeployeventBridgeSocketDeployconnectionstable5C7E957A",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "eventBridgeSocketDeployeventbridgebrokerServiceRoleDefaultPolicy5D548830",
        "Roles": [
          {
            "Ref": "eventBridgeSocketDeployeventbridgebrokerServiceRoleE80F517C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "eventBridgeSocketDeployeventbridgebrokerServiceRoleE80F517C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "eventBridgeSocketDeployonconnectAE0ACD17": {
      "DependsOn": [
        "eventBridgeSocketDeployonconnectServiceRoleDefaultPolicy4A968F2B",
        "eventBridgeSocketDeployonconnectServiceRole1FF5024C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "be8b79db12a597f3dc5261b1a0e10076d941e1cf1173a0d5fbcf2a110295c894.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": "eventBridgeSocketDeploy-connections-table",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "eventBridgeSocketDeployonconnectServiceRole1FF5024C",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "eventBridgeSocketDeployonconnectServiceRole1FF5024C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "eventBridgeSocketDeployonconnectServiceRoleDefaultPolicy4A968F2B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "eventBridgeSocketDeployeventBridgeSocketDeployconnectionstable5C7E957A",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "eventBridgeSocketDeployonconnectServiceRoleDefaultPolicy4A968F2B",
        "Roles": [
          {
            "Ref": "eventBridgeSocketDeployonconnectServiceRole1FF5024C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "eventBridgeSocketDeployondisconnect0F61A161": {
      "DependsOn": [
        "eventBridgeSocketDeployondisconnectServiceRoleDefaultPolicyC9FDF75A",
        "eventBridgeSocketDeployondisconnectServiceRoleA5D3C57B",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "1fde69467283d6bb392c3f58ccb435b2492c4ac548424b8c9a899ce697d94519.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": "eventBridgeSocketDeploy-connections-table",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "eventBridgeSocketDeployondisconnectServiceRoleA5D3C57B",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "eventBridgeSocketDeployondisconnectServiceRoleA5D3C57B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "eventBridgeSocketDeployondisconnectServiceRoleDefaultPolicyC9FDF75A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "eventBridgeSocketDeployeventBridgeSocketDeployconnectionstable5C7E957A",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "eventBridgeSocketDeployondisconnectServiceRoleDefaultPolicyC9FDF75A",
        "Roles": [
          {
            "Ref": "eventBridgeSocketDeployondisconnectServiceRoleA5D3C57B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
